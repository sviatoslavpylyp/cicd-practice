name: push workflow

on:
  push

env:
  PYTHON_VERSION: '3.13'

jobs:
  install_requirements:
    runs-on: ubuntu-latest

    steps:
      - name: pre actions/checkout
        uses: actions/checkout@v4

      - name: pre actions/setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: check if cached requirements.txt exist
        id: cached_requirements
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-requirements-${{ hashFiles('./requirements.txt') }}

      - name: install requirements.txt
        if: steps.cached_requirements.outputs.cache-hit != 'true'
        run: pip install --no-cache-dir -r requirements.txt

      - name: cache requirements.txt, if it was updated
        if: steps.cached_requirements.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-requirements-${{ hashFiles('./requirements.txt') }}


  create-semantic-version:
      runs-on: ubuntu-latest
      needs: install_requirements

      steps:
        - name: checkout
          uses: actions/checkout@v4
          with:
            persist-credentials: false

        - name: pre install python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        - name: Install Semantic Release
          run: pip install python-semantic-release

        - name: Run Semantic Release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: semantic-release publish


  build_and_deploy_docker_image:
    runs-on: ubuntu-latest
    needs: create-semantic-version

    env:
      DOCKERFILE_NAME: 'Dockerfile-gh-actions'

    steps:
      - name: pre actions/checkout
        uses: actions/checkout@v4

      - name: get cached requirement.txt
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-requirements-${{ hashFiles('./requirements.txt') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push to Dockerhub
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ${{ env.DOCKERFILE_NAME }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/py-app:prod
